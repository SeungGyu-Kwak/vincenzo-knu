a:173:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"강의 개요";i:1;i:5;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:441:"본 과목에서는 컴퓨터 소프트웨어를 구성하는 중요한 요소인 자료구조(data structure)를 다룬다. 선형자료구조(linear data structure)인 리스트(list), 스택(stack), 큐(queue)와 더불어 트리(tree), 그래프(graph) 등의 비선형자료구조(non-linear data structure)에 대해 설명하며, 마지막으로 자료에 대한 정렬(sorting), 탐색(searching) 등의 알고리즘도 소개한다.";}i:2;i:19;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:460;}i:6;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:460;}i:7;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:467;}i:8;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"강의 목표";i:1;i:5;i:2;i:467;}i:2;i:467;}i:9;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:467;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:467;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:253:"* 주어진 환경에서 다양한 문제를 분석하고 효율적으로 해결하기 위한 능력 배양
* 보다 나은 문제해결 방법을 모색하는 능력 향상
* 문제 해결 과정에서 토론을 통해 상호 의사소통 능력 배양";}i:2;i:485;}i:12;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:738;}i:13;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:738;}i:14;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:738;}i:15;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:164:"http://my.knu.ac.kr/stpo/stpo/cour/plans/viewPlanDetail.action?plans.searchOpenYrTrm=%2720212%27&plans.searchSubjCde=%27COME331%27&plans.searchSubClassCde=%27010%27";i:1;s:22:"세부 강의계획서";}i:2;i:745;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:936;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:937;}i:18;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:937;}i:19;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:1;i:1;i:1;}i:2;i:937;}i:20;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:937;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:941;}i:22;a:3:{i:0;s:9:"locallink";i:1;a:2:{i:0;s:6:"분류";i:1;s:6:"분류";}i:2;i:942;}i:23;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:960;}i:24;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:960;}i:25;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:960;}i:26;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:960;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:966;}i:28;a:3:{i:0;s:9:"locallink";i:1;a:2:{i:0;s:16:"구현에 따라";i:1;s:16:"구현에 따라";}i:2;i:967;}i:29;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1005;}i:30;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1005;}i:31;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1005;}i:32;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1005;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1011;}i:34;a:3:{i:0;s:9:"locallink";i:1;a:2:{i:0;s:16:"형태에 따라";i:1;s:16:"형태에 따라";}i:2;i:1012;}i:35;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1050;}i:36;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1050;}i:37;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1050;}i:38;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1050;}i:39;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1050;}i:40;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1052;}i:41;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"분류";i:1;i:5;i:2;i:1052;}i:2;i:1052;}i:42;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:1052;}i:43;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1062;}i:44;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1062;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:426:"자료의 특성과 크기, 주요 사용법과 수행하는 연산의 종류, 구현에 필요한 기억 공간 크기에 따라 여러 가지 종류의 자료구조 중 하나를 선택할 수 있다. 자료구조의 종류로는 자료형의 따라 분류하는 단순 구조와 자료 간 관계가 1 대 1인 선형 구조, 1 대 다 혹은 다 대 다 구조인 비선형 구조, 마지막으로 파일 구조가 있다.";}i:2;i:1072;}i:46;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1498;}i:47;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1500;}i:48;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"구현에 따라";i:1;i:5;i:2;i:1500;}i:2;i:1500;}i:49;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:1500;}i:50;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1520;}i:51;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1520;}i:52;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1520;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:201:" 배열 - 가장 일반적인 구조이다. 메모리 상에 같은 타입의 자료가 연속적으로 저장된다. 자료값을 나타내는 가장 작은 단위가 자료를 다루는 단위이다.";}i:2;i:1524;}i:54;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1725;}i:55;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1725;}i:56;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1725;}i:57;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1725;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" 튜플 - 둘 이상의 자료형을 묶음으로 다루는 구조이다.";}i:2;i:1729;}i:59;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1802;}i:60;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1802;}i:61;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1802;}i:62;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1802;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:221:" 연결 리스트 - 노드를 단위로 한다. 노드는 자료와 다음 노드를 가리키는 참조값으로 구성되어 있다. 노드가 다음 노드로 아무것도 가리키지 않으면 리스트의 끝이다.";}i:2;i:1806;}i:64;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2027;}i:65;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2027;}i:66;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2027;}i:67;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2027;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:145:" 원형 연결 리스트 - 각 노드는 다음 노드를 가리키고, 마지막 노드가 처음 노드를 가리키는 연결 리스트이다.";}i:2;i:2031;}i:69;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2176;}i:70;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2176;}i:71;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2176;}i:72;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2176;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:196:" 이중 연결 리스트 - 각 노드는 이전 노드와 다음 노드를 가리키는 참조값으로 구성된다. 처음 노드의 이전 노드와 마지막 노드의 다음 노드는 없다.";}i:2;i:2180;}i:74;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2376;}i:75;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2376;}i:76;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2376;}i:77;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2376;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:199:" 환형 이중 연결 리스트 - 처음 노드가 이전 노드로 마지막 노드를 가리키고, 마지막 노드가 다음 노드로 처음 노드를 가리키는 이중 연결 리스트이다.";}i:2;i:2380;}i:79;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2579;}i:80;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2579;}i:81;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2579;}i:82;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2579;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:" 해시 테이블 - 개체가 해시값에 따라 인덱싱된다.";}i:2;i:2583;}i:84;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2649;}i:85;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2649;}i:86;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2649;}i:87;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2651;}i:88;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"형태에 따라";i:1;i:5;i:2;i:2651;}i:2;i:2651;}i:89;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:2651;}i:90;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2671;}i:91;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:1;i:1;i:1;}i:2;i:2671;}i:92;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2671;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 선형 구조";}i:2;i:2675;}i:94;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2689;}i:95;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2689;}i:96;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:2689;}i:97;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2689;}i:98;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:318:" 스택 - 스택 자료구조에 먼저 저장된 것이 꺼내어 쓸 때는 제일 나중에 나온다. 반대로, 가장 최근에 저장된 것이 꺼내어 쓸 때는 제일 먼저 나온다. 만약, 자료들의 나열 순서를 바꾸고 싶다면 스택에 집어 넣었다가 꺼내면 역순으로 바뀐다.";}i:2;i:2695;}i:99;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3013;}i:100;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3013;}i:101;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:2;i:1;i:1;}i:2;i:3013;}i:102;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3013;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:189:" 큐 - 스택과 반대로 큐 자료구조에 먼저 저장된 것이 제일 먼저 나온다. 반대로, 가장 나중에 저장된 것이 꺼내어 쓸 때는 가장 나중에 나온다.";}i:2;i:3019;}i:104;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3208;}i:105;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3208;}i:106;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:3;}i:2;i:3208;}i:107;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3208;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:" 환형 큐 - 한정된 길이 안에서 부수적인 작업 없이 읽고 쓰기를 할 수 있는 큐이다.";}i:2;i:3216;}i:109;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3326;}i:110;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3326;}i:111;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3326;}i:112;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3326;}i:113;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:3326;}i:114;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3326;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" 덱 - 양쪽에서 넣기와 빼기를 할 수 있는 일반화된 선형 구조이다.";}i:2;i:3332;}i:116;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3420;}i:117;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3420;}i:118;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3420;}i:119;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3420;}i:120;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:1;i:1;i:1;}i:2;i:3420;}i:121;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3420;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" 비선형 구조";}i:2;i:3424;}i:123;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3441;}i:124;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3441;}i:125;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:3441;}i:126;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3441;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:" 그래프 - 꼭짓점과 꼭짓점을 잇는 변으로 구성된다.";}i:2;i:3447;}i:128;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3516;}i:129;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3516;}i:130;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3516;}i:131;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3516;}i:132;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3516;}i:133;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3516;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:286:"유향 그래프, 무향 그래프 - 변이 방향성을 갖는지 갖지 않는지에 따른 그래프의 분류이다.무향 그래프의 경우, 순환이 없는 연결 그래프를 뜻한다. 유향 그래프의 경우 변의 방향은 보통 부모를 가리키도록 구현된다.";}i:2;i:3517;}i:135;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3803;}i:136;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3803;}i:137;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:1;i:1;i:1;}i:2;i:3803;}i:138;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3803;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:170:" 트리 - 뿌리와, 뿌리 또는 다른 꼭짓점을 단 하나의 부모로 갖는 꼭짓점들로 이루어진 구조. 부모 자식 관계는 변으로 표현된다.";}i:2;i:3809;}i:140;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3979;}i:141;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3979;}i:142;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:3;}i:2;i:3979;}i:143;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3979;}i:144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" 이진 트리 - 자식이 최대 두 개인 트리.";}i:2;i:3987;}i:145;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4039;}i:146;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4039;}i:147;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4039;}i:148;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4039;}i:149;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4039;}i:150;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:1;i:1;i:2;i:2;i:4042;}i:2;i:4041;}i:151;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:4041;}i:152;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4041;}i:153;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4041;}i:154;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:23:":공통:binary_tree.png";i:1;s:0:"";i:2;s:5:"right";i:3;s:3:"400";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:4043;}i:155;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:4076;}i:156;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4078;}i:157;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:4078;}i:158;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4078;}i:159;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:4078;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"  이진트리의 예                           ";}i:2;i:4080;}i:161;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4128;}i:162;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4129;}i:163;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:4129;}i:2;i:4129;}i:164;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4130;}i:165;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4130;}i:166;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4130;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:" 힙 - 이진트리의 일종으로 이진트리에 어떤 특성을 부여한 것이라 할 수 있다.";}i:2;i:4142;}i:168;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4246;}i:169;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4246;}i:170;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4246;}i:171;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4246;}i:172;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:4246;}}